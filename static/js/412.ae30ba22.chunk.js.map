{"version":3,"file":"static/js/412.ae30ba22.chunk.js","mappings":"sOAAaA,EAAY,CACvB,CACEC,GAAI,EACJC,QAAS,QACTC,YAAY,EACZC,KAAM,UAER,CACEH,GAAI,EACJC,QAAS,WACTC,YAAY,EACZC,KAAM,c,SCyDV,EAxDkB,WAChB,IAAAC,GAA8CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAcF,EAAA,GAAEG,EAAmBH,EAAA,GAUpCI,EAAW,CACfC,QAAS,CAAEC,EAAG,QACdC,WAAY,CAAED,EAAG,MAGnB,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2CAA0CC,UACvDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4EAA2EC,UACxFF,EAAAA,EAAAA,KAACG,EAAAA,GAAa,CAAAD,SACXjB,EAAUmB,KAAI,SAACC,GACd,OACEL,EAAAA,EAAAA,KAACM,EAAAA,EAAe,CAAAJ,UACdF,EAAAA,EAAAA,KAACO,EAAAA,GAAQ,CAEPC,GAAIH,EAAIhB,KAAKa,UAGbF,EAAAA,EAAAA,KAACS,EAAAA,EAAOC,OAAM,CACZd,SAAUA,EACVe,QACEN,EAAInB,KAAOQ,EAAiB,UAAY,aAE1CkB,WAAY,CAAEC,SAAU,GAAKC,KAAM,WAEnCC,QAAS,kBAhCD,SAACC,GACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIhC,EAAUiC,OAAQD,IAChCD,IAAqB/B,EAAUgC,GAAG/B,IACpCS,EAAoBqB,EAG1B,CA0BiCG,CAAkBd,EAAInB,GAAG,EACxCe,UAAS,IAAAmB,OACPf,EAAInB,KAAOQ,EACP,oCACA,uBACHQ,UAEHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,8CAA6CC,SAC1DG,EAAIlB,WATFkB,EAAInB,OAZOmB,EAAInB,GA2B9B,SAKV,C","sources":["Components/ButtonData.js","Components/Tab Pane/ButtonNav.js"],"sourcesContent":["export const buttonNav = [\r\n  {\r\n    id: 0,\r\n    btnName: \"ABOUT\",\r\n    isSelected: false,\r\n    link: \"#about\",\r\n  },\r\n  {\r\n    id: 1,\r\n    btnName: \"PROJECTS\",\r\n    isSelected: false,\r\n    link: \"#projects\",\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\n//import { ButtonGroup, Button } from \"@material-tailwind/react\";\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\n\r\nimport { buttonNav } from \"../ButtonData\";\r\n\r\n//import { Link } from \"react-scroll\";\r\n\r\nconst ButtonNav = () => {\r\n  const [activeIdButton, setSelectedIdButton] = useState(0);\r\n\r\n  const getSelectedButton = (selectedButtonId) => {\r\n    for (let i = 0; i < buttonNav.length; i++) {\r\n      if (selectedButtonId === buttonNav[i].id) {\r\n        setSelectedIdButton(selectedButtonId);\r\n      }\r\n    }\r\n  };\r\n\r\n  const variants = {\r\n    clicked: { x: \"50px\" },\r\n    notClicked: { x: \"0\" },\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-[300px] md:w-[450px]  hidden md:block \">\r\n      <div className=\"flex flex-col gap-5 justify-start items-start text-black dark:text-white \">\r\n        <BrowserRouter>\r\n          {buttonNav.map((btn) => {\r\n            return (\r\n              <AnimatePresence key={btn.id}>\r\n                <HashLink\r\n                 \r\n                  to={btn.link}\r\n                  \r\n                >\r\n                  <motion.button\r\n                    variants={variants}\r\n                    animate={\r\n                      btn.id === activeIdButton ? \"clicked\" : \"notClicked\"\r\n                    }\r\n                    transition={{ duration: 0.5, ease: \"easeOut\" }}\r\n                    key={btn.id}\r\n                    onClick={() => getSelectedButton(btn.id)}\r\n                    className={` ${\r\n                      btn.id === activeIdButton\r\n                        ? \" text-cyan-600 dark:text-cyan-600\"\r\n                        : \"hover:text-cyan-600\"\r\n                    }`}\r\n                  >\r\n                    <span className=\"font-poppins font-[400] text-md md:text-lg \">\r\n                      {btn.btnName}\r\n                    </span>\r\n                  </motion.button>\r\n                </HashLink>\r\n              </AnimatePresence>\r\n            );\r\n          })}\r\n        </BrowserRouter>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonNav;\r\n"],"names":["buttonNav","id","btnName","isSelected","link","_useState","useState","_useState2","_slicedToArray","activeIdButton","setSelectedIdButton","variants","clicked","x","notClicked","_jsx","className","children","BrowserRouter","map","btn","AnimatePresence","HashLink","to","motion","button","animate","transition","duration","ease","onClick","selectedButtonId","i","length","getSelectedButton","concat"],"sourceRoot":""}