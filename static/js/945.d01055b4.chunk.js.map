{"version":3,"file":"static/js/945.d01055b4.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","source","excluded","i","target","sourceKeys","indexOf","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","useIsomorphicLayoutEffect","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","frame","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","isNumericalString","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","collectMotionValues","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","desc","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}